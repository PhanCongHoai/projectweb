import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { getUserId } from "../utils/auth";
import './CartPage.css';
import { useNavigate } from 'react-router-dom';


const CartPage = () => {
    const navigate = useNavigate();
  const [items, setItems] = useState([]);
  const userId = getUserId();

  // Load gi·ªè h√†ng
  const fetchCart = () => {
    if(userId === 0) return;
    axios
      .get(`http://localhost:5005/api/cart/${userId}`)
      .then((res) => setItems(res.data.items || []))
      .catch((err) => console.error('L·ªói t·∫£i gi·ªè h√†ng:', err));
  };

  useEffect(() => {
    fetchCart();
  }, [userId]);

  // T·ªïng ti·ªÅn
  const total = items.reduce(
    (sum, item) => sum + item.quantity * item.Product.price,
    0
  );

  // TƒÉng/gi·∫£m s·ªë l∆∞·ª£ng
  const updateQuantity = async (itemId, newQuantity) => {
    if (newQuantity < 1) return;

    try {
      await axios.put(`http://localhost:5005/api/cart/item/${itemId}`, {
        cartItemId: itemId,
        quantity: newQuantity,
      });
      fetchCart();
    } catch (err) {
      alert('Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng!');
      console.error(err);
    }
  };

  // Xo√° s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
  const removeItem = async (itemId) => {
    if (!window.confirm('B·∫°n c√≥ ch·∫Øc mu·ªën xo√° s·∫£n ph·∫©m n√†y kh·ªèi gi·ªè h√†ng?')) return;

    try {
      await axios.delete(`http://localhost:5005/api/cart/remove/${itemId}`);
      fetchCart();
    } catch (err) {
      alert('Kh√¥ng th·ªÉ xo√° s·∫£n ph·∫©m!');
      console.error(err);
    }
  };

  return (
    <div className="cart-page">
      <h2>üõí Gi·ªè h√†ng c·ªßa b·∫°n</h2>
      {items.length === 0 ? (
        <p>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong gi·ªè.</p>
      ) : (
        <>
          <table className="cart-table">
            <thead>
              <tr>
                <th>S·∫£n ph·∫©m</th>
                <th>T√™n</th>
                <th>Gi√°</th>
                <th>S·ªë l∆∞·ª£ng</th>
                <th>S·ªë l∆∞·ª£ng c√≤n</th>
                <th>Th√†nh ti·ªÅn</th>
                <th>Thao t√°c</th>
              </tr>
            </thead>
            <tbody>
              {items.map((item) => {
                const product = item.Product;
                const available = product.number - product.number2;

                return (
                  <tr key={item.id}>
                    <td>
                      <img
                        src={product.image_url}
                        alt={product.title}
                        width="80"
                      />
                    </td>
                    <td>{product.title}</td>
                    <td>{product.price.toLocaleString()}‚Ç´</td>
                    <td>
                      <button
                        onClick={() => updateQuantity(item.id, item.quantity - 1)}
                      >
                        -
                      </button>
                      <span style={{ margin: '0 8px' }}>{item.quantity}</span>
                      <button
                        onClick={() => {
                          if (item.quantity < available) {
                            updateQuantity(item.id, item.quantity + 1);
                          } else {
                            alert('V∆∞·ª£t qu√° s·ªë l∆∞·ª£ng t·ªìn kho!');
                          }
                        }}
                      >
                        +
                      </button>
                    </td>
                    <td>{available}</td>
                    <td>
                      {(product.price * item.quantity).toLocaleString()}‚Ç´
                    </td>
                    <td>
                      <button
                        onClick={() => removeItem(item.id)}
                        style={{ color: 'red' }}
                      >
                        Xo√°
                      </button>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
          <div className="cart-total">
            <h3>T·ªïng ti·ªÅn: {total.toLocaleString()}‚Ç´</h3>
            <button className="checkout-btn" onClick={() => navigate("/checkout?from=cart")}>
                Thanh to√°n
            </button>
          </div>
        </>
      )}
    </div>
  );
};

export default CartPage;
